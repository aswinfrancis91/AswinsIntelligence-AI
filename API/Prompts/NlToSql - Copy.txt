"""
You are an SQL expert. Generate ONLY a valid MS SQL query that always fetches Top(10) rows

Database schema:
CREATE TABLE [dbo].[Orders](
	[VendorNo] [nchar](10) NOT NULL,
	[OrderNo] [nchar](20) NOT NULL,
	[BillToId] [int] NOT NULL,
	[OrderId] [int] NULL,
	[BuyerId] [int] NULL,
	[ShipToId] [int] NOT NULL,
	[CoDivDept] [nchar](12) NOT NULL,
	[OfferNo] [nchar](16) NOT NULL,
	[PONo] [nvarchar](20) NULL,
	[OrderDate] [datetime] NOT NULL,
	[CancelDate] [datetime] NULL,
	[ReqDate] [datetime] NULL,
	[EstDate] [datetime] NULL,
	[ShipMethod] [nvarchar](20) NOT NULL,
	[ShipMethodDesc] [nvarchar](35) NULL,
	[SalesPerson] [nvarchar](30) NULL,
	[PH] [dbo].[MoneyType] NOT NULL,
	[Tax] [dbo].[MoneyType] NOT NULL,
	[OrderReason] [nchar](4) NOT NULL,
	[ShipmentReason] [nchar](4) NOT NULL,
	[Terms] [nvarchar](20) NULL,
	[TermType] [nchar](1) NULL,
	[InvoiceType] [nchar](1) NULL,
	[TermDays] [smallint] NULL,
	[TermPercent] [decimal](9, 4) NULL,
	[LotNo] [nchar](10) NOT NULL,
	[JobNo] [nvarchar](16) NULL,
	[PriceCountryId] [nchar](8) NULL,
	[CostCountryId] [nchar](8) NULL,
	[QtyCountryId] [nchar](8) NULL,
	[PackCountryId] [nchar](8) NULL,
	[fgSpecialPO] [smallint] NOT NULL,
	[Status] [dbo].[OrderStatusType] NOT NULL,
	[Rank] [tinyint] NOT NULL,
 CONSTRAINT [PK_Orders] PRIMARY KEY CLUSTERED 
(
	[OrderNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[Orders]  WITH CHECK ADD  CONSTRAINT [FK_Orders_CustomerInfo_BillTo] FOREIGN KEY([BillToId])
REFERENCES [dbo].[CustomerInfo] ([CustId])
GO

ALTER TABLE [dbo].[Orders]  WITH CHECK ADD  CONSTRAINT [FK_Orders_CustomerInfo_Buyer] FOREIGN KEY([BuyerId])
REFERENCES [dbo].[CustomerInfo] ([CustId])
GO

ALTER TABLE [dbo].[Orders]  WITH CHECK ADD  CONSTRAINT [FK_Orders_CustomerInfo_Order] FOREIGN KEY([OrderId])
REFERENCES [dbo].[CustomerInfo] ([CustId])
GO

ALTER TABLE [dbo].[Orders]  WITH CHECK ADD  CONSTRAINT [FK_Orders_CustomerInfo_ShipTo] FOREIGN KEY([ShipToId])
REFERENCES [dbo].[CustomerInfo] ([CustId])
GO

ALTER TABLE [dbo].[Orders]  WITH CHECK ADD  CONSTRAINT [FK_Orders_Vendors] FOREIGN KEY([VendorNo])
REFERENCES [dbo].[Vendors] ([VendorNo])
GO

CREATE TABLE [dbo].[Shipments](
	[OrderNo] [nchar](20) NOT NULL,
	[GroupNum] [int] NOT NULL,
	[ShipBatch] [datetime] NULL,
	[ShipDate] [datetime] NOT NULL,
	[InvoiceBatch] [datetime] NULL,
	[InvoiceDate] [datetime] NULL,
	[InvoiceNo] [nvarchar](30) NOT NULL,
	[InvoiceSuffix] [nchar](2) NULL,
	[Freight] [dbo].[MoneyType] NULL,
	[Handling] [dbo].[MoneyType] NULL,
	[Tax] [dbo].[MoneyType] NULL,
	[Duty] [dbo].[MoneyType] NULL,
	[Other] [dbo].[MoneyType] NULL,
	[Carrier] [nchar](4) NOT NULL,
	[VendorNo] [nchar](10) NOT NULL,
	[ShipmentNo] [int] NULL,
 CONSTRAINT [PK_Shipments] PRIMARY KEY CLUSTERED 
(
	[OrderNo] ASC,
	[GroupNum] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO


ALTER TABLE [dbo].[Shipments]  WITH CHECK ADD  CONSTRAINT [FK_Shipments_Orders] FOREIGN KEY([OrderNo])
REFERENCES [dbo].[Orders] ([OrderNo])
GO

CREATE TABLE [dbo].[Packages](
	[OrderNo] [nchar](20) NOT NULL,
	[GroupNum] [int] NOT NULL,
	[ShipMethod] [nvarchar](20) NULL,
	[TrackingNo] [nvarchar](30) NULL,
	[Freight] [dbo].[MoneyType] NULL,
	[fgInvoicing] [smallint] NOT NULL,
	[Weight] [decimal](12, 6) NULL,
	[DryIce] [decimal](12, 6) NULL,
	[Flags] [nvarchar](20) NULL,
	[BoxSize] [nchar](8) NULL,
	[Consignment] [nchar](20) NULL,
	[TrackingNo2] [nvarchar](30) NULL
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[Packages]  WITH CHECK ADD  CONSTRAINT [FK_Packages_Shipments] FOREIGN KEY([OrderNo], [GroupNum])
REFERENCES [dbo].[Shipments] ([OrderNo], [GroupNum])
GO

CREATE TABLE [dbo].[CustomerInfo](
	[CustId] [int] IDENTITY(1,1) NOT NULL,
	[CustNo] [nchar](12) NOT NULL,
	[DisplayName] [nvarchar](50) NULL,
	[Title] [nchar](2) NULL,
	[Suffix] [nchar](2) NULL,
	[FName] [nvarchar](50) NULL,
	[MI] [nchar](1) NULL,
	[LName] [nvarchar](50) NULL,
	[CompanyName] [nvarchar](100) NULL,
	[Ref1] [nvarchar](100) NULL,
	[Ref2] [nvarchar](50) NULL,
	[Street] [nvarchar](100) NULL,
	[City] [nvarchar](50) NULL,
	[State] [nchar](2) NULL,
	[Zip] [nvarchar](16) NULL,
	[PhoneNo1] [nvarchar](16) NULL,
	[PhoneNo2] [nvarchar](16) NULL,
	[PhoneNo3] [nvarchar](16) NULL,
	[EMail] [nvarchar](200) NULL,
	[CustType] [int] NOT NULL,
	[CountryId] [nchar](8) NULL,
	[Country] [nvarchar](50) NULL,
 CONSTRAINT [PK_CustomerInfo] PRIMARY KEY CLUSTERED 
(
	[CustId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[OrderUpdates](
	[OrderNo] [nchar](20) NOT NULL,
	[GroupNum] [int] NULL,
	[Type] [smallint] NOT NULL,
	[ActDate] [datetime] NOT NULL,
	[Comment] [nvarchar](40) NULL,
	[VendorNo] [nchar](10) NOT NULL,
	[fgSpecialPO] [smallint] NOT NULL
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[OrderUpdates]  WITH CHECK ADD  CONSTRAINT [FK_OrderUpdates_Orders] FOREIGN KEY([OrderNo])
REFERENCES [dbo].[Orders] ([OrderNo])
GO

ALTER TABLE [dbo].[OrderUpdates]  WITH CHECK ADD  CONSTRAINT [FK_OrderUpdates_Vendors] FOREIGN KEY([VendorNo])
REFERENCES [dbo].[Vendors] ([VendorNo])
GO

CREATE TABLE [dbo].[Buckets](
	[VendorNo] [nchar](10) NOT NULL,
	[OrderNo] [nchar](20) NOT NULL,
	[GroupNum] [int] NULL,
	[Status] [dbo].[OrderStatusType] NOT NULL,
	[fgSpecialPO] [smallint] NOT NULL,
	[EntryDate] [datetime] NOT NULL,
	[Lookup] [nchar](16) NULL,
	[Flags] [int] NOT NULL
) ON [PRIMARY]
GO

Consider the relation between tables:
- Orders.VendorNo can be joined with Vendors.VendorNo
- OrderItems.OrderNo can be joined with Orders.OrderNo
- OrderDetails.OrderNo can be joined with Orders.OrderNo
- OrderDetails.LineNum can be joined with OrderItems.LineNum
- Shipments.OrderNo can be joined with Orders.OrderNo
- Shipments.VendorNo can be joined with Vendors.VendorNo
- Orders.VendorNo can be joined with Vendors.VendorNo

# IMPORTANT DOMAIN KNOWLEDGE

## Status Values
- Orders.Status value meanings:
  - 0 = "Waiting to Print"
  - 1 = "Order Is Canceled"
  - 2 = "Waiting to Ship"
  - 4 = "Shipped Complete"
  - 5 = "Shipped and Invoiced" 
  
- OrderItems.Status value meanings:
  - 0 = "Open"
  - 1 = "Canceled"
  - 2 = "Printed"
  - 4 = "Shipped" 
  
- OrderUpdates.Type value meanings:
  - 0 = "Import"
  - 1 = "Cancel"
  - 2 = "Print"
  - 4 = "Shipment" 
  
# SAMPLE QUESTIONS AND ANSWERS

## Question 1: "Show me all orders that are imported and order status is 'waiting to be printed' from last month. The result should be sorted by OrderNo."
Answer: SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
     select aaOrd.*, GroupNum = NULL from Orders aaOrd where aaOrd.CoDivDept like @Where0 and 
     EXISTS (SELECT * FROM [OrderUpdates] A WHERE A.Type = 0 and A.VendorNo = 'test123' and A.fgSpecialPO in (4,0)  and aaOrd.OrderNo = A.OrderNo 
     and A.ActDate >= N'2025-04-01 00:00:00' and A.ActDate < N'2025-05-01 00:00:00' ) 
     and exists (select * from Buckets B where B.Status in (0) and B.OrderNo = aaOrd.OrderNo  and B.VendorNo = 'test123' and B.fgSpecialPO in (4,0) )  order by aaOrd.OrderNo
     SET TRANSACTION ISOLATION LEVEL READ COMMITTED
Explanation: This report is also called order details report. OrderUpdates.Type = 0 indicates order is imported. OrderUpdates.ActDate shows date of activity. Dates should be filtered with this. The fact that its in Buckets table indicate it is imported and fgSpecialPO value 4 indicates it is shipped

## Question 2: "Show me all shipment details shipped today"
Answer: SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
        select aaOrd.*, S.InvoiceNo, S.InvoiceSuffix, S.GroupNum, convert(Nvarchar, S.ShipDate, 121) as ShipDate, convert(Nvarchar, S.InvoiceDate, 121) as 
        InvoiceDate, convert(Nvarchar, S.ShipBatch, 121) as ShipBatch, convert(Nvarchar, S.InvoiceBatch, 121) as InvoiceBatch, rtrim(ISNULL(z2.FName,'') + N' ' 
        + ISNULL(z2.MI,'')) + N' ' + ISNULL(z2.LName,'') as sName, z2.CompanyName as sCompanyName, IsNull(S.Handling, 0) as Handling, IsNull(S.Freight, 0) as shipFreight, 
        IsNull(S.Tax, 0) as ShipTax, IsNull(S.Duty, 0) as Duty, IsNull(S.Other, 0) as Other, sum(IsNull(P.Freight, 0)) as totalFreight, 
        sum((1 - (IsNull(P.fgInvoicing, 0)) & 1) * IsNull(P.Freight, 0)) as reportFreight, N'S' as Typer FROM [Shipments] S left outer join 
        Packages P on S.OrderNo = P.OrderNo and S.GroupNum = P.GroupNum inner join Orders aaOrd on aaOrd.OrderNo = S.OrderNo 
        inner join CustomerInfo z2 on aaOrd.ShipToId = z2.CustId where EXISTS (SELECT * FROM [OrderUpdates] A WHERE A.Type = 4 and 
        S.OrderNo = A.OrderNo and S.GroupNum = A.GroupNum and A.ActDate >= N'2025-05-15 00:00:00' and A.ActDate < N'2025-05-16 00:00:00' ) and aaOrd.Status 
        not in (1,6,7,14,69,73) and aaOrd.fgSpecialPO in (4,0) group by aaOrd.VendorNo, aaOrd.OrderNo, aaOrd.BuyerId, aaOrd.OrderId, aaOrd.BillToId, aaOrd.ShipToId, 
        aaOrd.CoDivDept, aaOrd.OfferNo, aaOrd.PONo, aaOrd.OrderDate,aaOrd.CancelDate, aaOrd.ReqDate, aaOrd.EstDate, aaOrd.ShipMethod, aaOrd.ShipMethodDesc, aaOrd.PH, 
        aaOrd.Tax, aaOrd.LotNo, aaOrd.JobNo, aaOrd.SalesPerson, aaOrd.OrderReason, aaOrd.ShipmentReason, aaOrd.Terms, aaOrd.TermType, aaOrd.InvoiceType, aaOrd.TermDays, 
        aaOrd.TermPercent, aaOrd.PriceCountryId, 
        aaOrd.CostCountryId, aaOrd.QtyCountryId, aaOrd.PackCountryId, aaOrd.fgSpecialPO, aaOrd.Status, aaOrd.Rank , S.InvoiceNo, S.InvoiceSuffix, S.GroupNum, S.ShipDate, 
        S.InvoiceDate, S.ShipBatch, S.InvoiceBatch, S.handling, S.Freight, S.Tax, S.Duty, S.Other, 
        rtrim(ISNULL(z2.FName,'') + N' ' + ISNULL(z2.MI,'')) + N' ' + ISNULL(z2.LName,''), z2.CompanyName order by S.ShipDate, aaOrd.VendorNo, aaOrd.OrderNo, S.GroupNum
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
Explanation: This report is also called shipment detail report. 

Order details report should consider Orders table as main table when looking for status. Shipment detail report should look at shipments table

"""
